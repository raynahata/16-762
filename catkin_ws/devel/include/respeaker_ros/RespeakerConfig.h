//#line 2 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the respaker_ros package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __respaker_ros__RESPEAKERCONFIG_H__
#define __respaker_ros__RESPEAKERCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace respaker_ros
{
  class RespeakerConfigStatics;

  class RespeakerConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      virtual ~AbstractParamDescription() = default;

      virtual void clamp(RespeakerConfig &config, const RespeakerConfig &max, const RespeakerConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const RespeakerConfig &config1, const RespeakerConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, RespeakerConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const RespeakerConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, RespeakerConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const RespeakerConfig &config) const = 0;
      virtual void getValue(const RespeakerConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T RespeakerConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T RespeakerConfig::* field;

      virtual void clamp(RespeakerConfig &config, const RespeakerConfig &max, const RespeakerConfig &min) const override
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const RespeakerConfig &config1, const RespeakerConfig &config2) const override
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, RespeakerConfig &config) const override
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const RespeakerConfig &config) const override
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, RespeakerConfig &config) const override
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const RespeakerConfig &config) const override
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const RespeakerConfig &config, boost::any &val) const override
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      virtual ~AbstractGroupDescription() = default;

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, RespeakerConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, RespeakerConfig &top) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const override
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<RespeakerConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(RespeakerConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("STATNOISEONOFF"==(*_i)->name){STATNOISEONOFF = boost::any_cast<bool>(val);}
        if("GAMMA_ETAIL"==(*_i)->name){GAMMA_ETAIL = boost::any_cast<double>(val);}
        if("AGCTIME"==(*_i)->name){AGCTIME = boost::any_cast<double>(val);}
        if("GAMMA_NS_SR"==(*_i)->name){GAMMA_NS_SR = boost::any_cast<double>(val);}
        if("AGCDESIREDLEVEL"==(*_i)->name){AGCDESIREDLEVEL = boost::any_cast<double>(val);}
        if("MIN_NN_SR"==(*_i)->name){MIN_NN_SR = boost::any_cast<double>(val);}
        if("STATNOISEONOFF_SR"==(*_i)->name){STATNOISEONOFF_SR = boost::any_cast<bool>(val);}
        if("MIN_NS_SR"==(*_i)->name){MIN_NS_SR = boost::any_cast<double>(val);}
        if("GAMMA_ENL"==(*_i)->name){GAMMA_ENL = boost::any_cast<double>(val);}
        if("NLAEC_MODE"==(*_i)->name){NLAEC_MODE = boost::any_cast<int>(val);}
        if("TRANSIENTONOFF"==(*_i)->name){TRANSIENTONOFF = boost::any_cast<bool>(val);}
        if("RT60ONOFF"==(*_i)->name){RT60ONOFF = boost::any_cast<bool>(val);}
        if("AGCGAIN"==(*_i)->name){AGCGAIN = boost::any_cast<double>(val);}
        if("NONSTATNOISEONOFF"==(*_i)->name){NONSTATNOISEONOFF = boost::any_cast<bool>(val);}
        if("AECFREEZEONOFF"==(*_i)->name){AECFREEZEONOFF = boost::any_cast<bool>(val);}
        if("AGCMAXGAIN"==(*_i)->name){AGCMAXGAIN = boost::any_cast<double>(val);}
        if("CNIONOFF"==(*_i)->name){CNIONOFF = boost::any_cast<bool>(val);}
        if("NONSTATNOISEONOFF_SR"==(*_i)->name){NONSTATNOISEONOFF_SR = boost::any_cast<bool>(val);}
        if("NLATTENONOFF"==(*_i)->name){NLATTENONOFF = boost::any_cast<bool>(val);}
        if("ECHOONOFF"==(*_i)->name){ECHOONOFF = boost::any_cast<bool>(val);}
        if("AECNORM"==(*_i)->name){AECNORM = boost::any_cast<double>(val);}
        if("AECSILENCELEVEL"==(*_i)->name){AECSILENCELEVEL = boost::any_cast<double>(val);}
        if("GAMMA_E"==(*_i)->name){GAMMA_E = boost::any_cast<double>(val);}
        if("FREEZEONOFF"==(*_i)->name){FREEZEONOFF = boost::any_cast<bool>(val);}
        if("AGCONOFF"==(*_i)->name){AGCONOFF = boost::any_cast<bool>(val);}
        if("MIN_NN"==(*_i)->name){MIN_NN = boost::any_cast<double>(val);}
        if("MIN_NS"==(*_i)->name){MIN_NS = boost::any_cast<double>(val);}
        if("GAMMA_NS"==(*_i)->name){GAMMA_NS = boost::any_cast<double>(val);}
        if("HPFONOFF"==(*_i)->name){HPFONOFF = boost::any_cast<int>(val);}
        if("GAMMAVAD_SR"==(*_i)->name){GAMMAVAD_SR = boost::any_cast<double>(val);}
        if("GAMMA_NN"==(*_i)->name){GAMMA_NN = boost::any_cast<double>(val);}
        if("GAMMA_NN_SR"==(*_i)->name){GAMMA_NN_SR = boost::any_cast<double>(val);}
      }
    }

    bool STATNOISEONOFF;
double GAMMA_ETAIL;
double AGCTIME;
double GAMMA_NS_SR;
double AGCDESIREDLEVEL;
double MIN_NN_SR;
bool STATNOISEONOFF_SR;
double MIN_NS_SR;
double GAMMA_ENL;
int NLAEC_MODE;
bool TRANSIENTONOFF;
bool RT60ONOFF;
double AGCGAIN;
bool NONSTATNOISEONOFF;
bool AECFREEZEONOFF;
double AGCMAXGAIN;
bool CNIONOFF;
bool NONSTATNOISEONOFF_SR;
bool NLATTENONOFF;
bool ECHOONOFF;
double AECNORM;
double AECSILENCELEVEL;
double GAMMA_E;
bool FREEZEONOFF;
bool AGCONOFF;
double MIN_NN;
double MIN_NS;
double GAMMA_NS;
int HPFONOFF;
double GAMMAVAD_SR;
double GAMMA_NN;
double GAMMA_NN_SR;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool STATNOISEONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double GAMMA_ETAIL;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double AGCTIME;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double GAMMA_NS_SR;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double AGCDESIREDLEVEL;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double MIN_NN_SR;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool STATNOISEONOFF_SR;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double MIN_NS_SR;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double GAMMA_ENL;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int NLAEC_MODE;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool TRANSIENTONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool RT60ONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double AGCGAIN;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool NONSTATNOISEONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool AECFREEZEONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double AGCMAXGAIN;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool CNIONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool NONSTATNOISEONOFF_SR;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool NLATTENONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool ECHOONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double AECNORM;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double AECSILENCELEVEL;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double GAMMA_E;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool FREEZEONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool AGCONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double MIN_NN;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double MIN_NS;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double GAMMA_NS;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int HPFONOFF;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double GAMMAVAD_SR;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double GAMMA_NN;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double GAMMA_NN_SR;
//#line 231 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("RespeakerConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const RespeakerConfig &__max__ = __getMax__();
      const RespeakerConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const RespeakerConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const RespeakerConfig &__getDefault__();
    static const RespeakerConfig &__getMax__();
    static const RespeakerConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const RespeakerConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void RespeakerConfig::ParamDescription<std::string>::clamp(RespeakerConfig &config, const RespeakerConfig &max, const RespeakerConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class RespeakerConfigStatics
  {
    friend class RespeakerConfig;

    RespeakerConfigStatics()
    {
RespeakerConfig::GroupDescription<RespeakerConfig::DEFAULT, RespeakerConfig> Default("Default", "", 0, 0, true, &RespeakerConfig::groups);
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.STATNOISEONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.STATNOISEONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.STATNOISEONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("STATNOISEONOFF", "bool", 0, "Stationary noise suppression. 0 = OFF 1 = ON", "", &RespeakerConfig::STATNOISEONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("STATNOISEONOFF", "bool", 0, "Stationary noise suppression. 0 = OFF 1 = ON", "", &RespeakerConfig::STATNOISEONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.GAMMA_ETAIL = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.GAMMA_ETAIL = 3.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.GAMMA_ETAIL = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_ETAIL", "double", 0, "Over-subtraction factor of echo (tail components). min .. max attenuation", "", &RespeakerConfig::GAMMA_ETAIL)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_ETAIL", "double", 0, "Over-subtraction factor of echo (tail components). min .. max attenuation", "", &RespeakerConfig::GAMMA_ETAIL)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.AGCTIME = 0.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.AGCTIME = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.AGCTIME = 0.982401;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AGCTIME", "double", 0, "Ramps-up / down time-constant in seconds.", "", &RespeakerConfig::AGCTIME)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AGCTIME", "double", 0, "Ramps-up / down time-constant in seconds.", "", &RespeakerConfig::AGCTIME)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.GAMMA_NS_SR = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.GAMMA_NS_SR = 3.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.GAMMA_NS_SR = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_NS_SR", "double", 0, "Over-subtraction factor of stationary noise for ASR.  [0.0 .. 3.0] (default: 1.0)", "", &RespeakerConfig::GAMMA_NS_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_NS_SR", "double", 0, "Over-subtraction factor of stationary noise for ASR.  [0.0 .. 3.0] (default: 1.0)", "", &RespeakerConfig::GAMMA_NS_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.AGCDESIREDLEVEL = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.AGCDESIREDLEVEL = 0.99;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.AGCDESIREDLEVEL = 0.005;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AGCDESIREDLEVEL", "double", 0, "Target power level of the output signal.  [-inf .. 0] dBov (default: -23dBov = 10log10(0.005))", "", &RespeakerConfig::AGCDESIREDLEVEL)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AGCDESIREDLEVEL", "double", 0, "Target power level of the output signal.  [-inf .. 0] dBov (default: -23dBov = 10log10(0.005))", "", &RespeakerConfig::AGCDESIREDLEVEL)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.MIN_NN_SR = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.MIN_NN_SR = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.MIN_NN_SR = 0.3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("MIN_NN_SR", "double", 0, "Gain-floor for non-stationary noise suppression for ASR. [-inf .. 0] dB (default: -10dB = 20log10(0.3))", "", &RespeakerConfig::MIN_NN_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("MIN_NN_SR", "double", 0, "Gain-floor for non-stationary noise suppression for ASR. [-inf .. 0] dB (default: -10dB = 20log10(0.3))", "", &RespeakerConfig::MIN_NN_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.STATNOISEONOFF_SR = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.STATNOISEONOFF_SR = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.STATNOISEONOFF_SR = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("STATNOISEONOFF_SR", "bool", 0, "Stationary noise suppression for ASR. 0 = OFF 1 = ON", "", &RespeakerConfig::STATNOISEONOFF_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("STATNOISEONOFF_SR", "bool", 0, "Stationary noise suppression for ASR. 0 = OFF 1 = ON", "", &RespeakerConfig::STATNOISEONOFF_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.MIN_NS_SR = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.MIN_NS_SR = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.MIN_NS_SR = 0.15;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("MIN_NS_SR", "double", 0, "Gain-floor for stationary noise suppression for ASR. [-inf .. 0] dB (default: -16dB = 20log10(0.15))", "", &RespeakerConfig::MIN_NS_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("MIN_NS_SR", "double", 0, "Gain-floor for stationary noise suppression for ASR. [-inf .. 0] dB (default: -16dB = 20log10(0.15))", "", &RespeakerConfig::MIN_NS_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.GAMMA_ENL = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.GAMMA_ENL = 5.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.GAMMA_ENL = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_ENL", "double", 0, "Over-subtraction factor of non-linear echo. min .. max attenuation", "", &RespeakerConfig::GAMMA_ENL)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_ENL", "double", 0, "Over-subtraction factor of non-linear echo. min .. max attenuation", "", &RespeakerConfig::GAMMA_ENL)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.NLAEC_MODE = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.NLAEC_MODE = 2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.NLAEC_MODE = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<int>("NLAEC_MODE", "int", 0, "Non-Linear AEC training mode. 0 = OFF 1 = ON - phase 1 2 = ON - phase 2", "", &RespeakerConfig::NLAEC_MODE)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<int>("NLAEC_MODE", "int", 0, "Non-Linear AEC training mode. 0 = OFF 1 = ON - phase 1 2 = ON - phase 2", "", &RespeakerConfig::NLAEC_MODE)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.TRANSIENTONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.TRANSIENTONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.TRANSIENTONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("TRANSIENTONOFF", "bool", 0, "Transient echo suppression. 0 = OFF 1 = ON", "", &RespeakerConfig::TRANSIENTONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("TRANSIENTONOFF", "bool", 0, "Transient echo suppression. 0 = OFF 1 = ON", "", &RespeakerConfig::TRANSIENTONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.RT60ONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.RT60ONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.RT60ONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("RT60ONOFF", "bool", 0, "RT60 Estimation for AES. 0 = OFF 1 = ON", "", &RespeakerConfig::RT60ONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("RT60ONOFF", "bool", 0, "RT60 Estimation for AES. 0 = OFF 1 = ON", "", &RespeakerConfig::RT60ONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.AGCGAIN = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.AGCGAIN = 1000.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.AGCGAIN = 11.119642;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AGCGAIN", "double", 0, "Current AGC gain factor.  [0 .. 60] dB (default: 0.0dB = 20log10(1.0))", "", &RespeakerConfig::AGCGAIN)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AGCGAIN", "double", 0, "Current AGC gain factor.  [0 .. 60] dB (default: 0.0dB = 20log10(1.0))", "", &RespeakerConfig::AGCGAIN)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.NONSTATNOISEONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.NONSTATNOISEONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.NONSTATNOISEONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("NONSTATNOISEONOFF", "bool", 0, "Non-stationary noise suppression. 0 = OFF 1 = ON", "", &RespeakerConfig::NONSTATNOISEONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("NONSTATNOISEONOFF", "bool", 0, "Non-stationary noise suppression. 0 = OFF 1 = ON", "", &RespeakerConfig::NONSTATNOISEONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.AECFREEZEONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.AECFREEZEONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.AECFREEZEONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("AECFREEZEONOFF", "bool", 0, "Adaptive Echo Canceler updates inhibit. 0 = Adaptation enabled 1 = Freeze adaptation, filter only", "", &RespeakerConfig::AECFREEZEONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("AECFREEZEONOFF", "bool", 0, "Adaptive Echo Canceler updates inhibit. 0 = Adaptation enabled 1 = Freeze adaptation, filter only", "", &RespeakerConfig::AECFREEZEONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.AGCMAXGAIN = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.AGCMAXGAIN = 1000.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.AGCMAXGAIN = 31.6;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AGCMAXGAIN", "double", 0, "Maximum AGC gain factor.  [0 .. 60] dB (default 30dB = 20log10(31.6))", "", &RespeakerConfig::AGCMAXGAIN)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AGCMAXGAIN", "double", 0, "Maximum AGC gain factor.  [0 .. 60] dB (default 30dB = 20log10(31.6))", "", &RespeakerConfig::AGCMAXGAIN)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.CNIONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.CNIONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.CNIONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("CNIONOFF", "bool", 0, "Comfort Noise Insertion. 0 = OFF 1 = ON", "", &RespeakerConfig::CNIONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("CNIONOFF", "bool", 0, "Comfort Noise Insertion. 0 = OFF 1 = ON", "", &RespeakerConfig::CNIONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.NONSTATNOISEONOFF_SR = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.NONSTATNOISEONOFF_SR = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.NONSTATNOISEONOFF_SR = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("NONSTATNOISEONOFF_SR", "bool", 0, "Non-stationary noise suppression for ASR. 0 = OFF 1 = ON", "", &RespeakerConfig::NONSTATNOISEONOFF_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("NONSTATNOISEONOFF_SR", "bool", 0, "Non-stationary noise suppression for ASR. 0 = OFF 1 = ON", "", &RespeakerConfig::NONSTATNOISEONOFF_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.NLATTENONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.NLATTENONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.NLATTENONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("NLATTENONOFF", "bool", 0, "Non-Linear echo attenuation. 0 = OFF 1 = ON", "", &RespeakerConfig::NLATTENONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("NLATTENONOFF", "bool", 0, "Non-Linear echo attenuation. 0 = OFF 1 = ON", "", &RespeakerConfig::NLATTENONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.ECHOONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.ECHOONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.ECHOONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("ECHOONOFF", "bool", 0, "Echo suppression. 0 = OFF 1 = ON", "", &RespeakerConfig::ECHOONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("ECHOONOFF", "bool", 0, "Echo suppression. 0 = OFF 1 = ON", "", &RespeakerConfig::ECHOONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.AECNORM = 0.25;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.AECNORM = 16.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.AECNORM = 2.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AECNORM", "double", 0, "Limit on norm of AEC filter coefficients", "", &RespeakerConfig::AECNORM)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AECNORM", "double", 0, "Limit on norm of AEC filter coefficients", "", &RespeakerConfig::AECNORM)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.AECSILENCELEVEL = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.AECSILENCELEVEL = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.AECSILENCELEVEL = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AECSILENCELEVEL", "double", 0, "Threshold for signal detection in AEC [-inf .. 0] dBov (Default: -80dBov = 10log10(1x10-8))", "", &RespeakerConfig::AECSILENCELEVEL)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("AECSILENCELEVEL", "double", 0, "Threshold for signal detection in AEC [-inf .. 0] dBov (Default: -80dBov = 10log10(1x10-8))", "", &RespeakerConfig::AECSILENCELEVEL)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.GAMMA_E = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.GAMMA_E = 3.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.GAMMA_E = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_E", "double", 0, "Over-subtraction factor of echo (direct and early components). min .. max attenuation", "", &RespeakerConfig::GAMMA_E)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_E", "double", 0, "Over-subtraction factor of echo (direct and early components). min .. max attenuation", "", &RespeakerConfig::GAMMA_E)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.FREEZEONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.FREEZEONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.FREEZEONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("FREEZEONOFF", "bool", 0, "Adaptive beamformer updates. 0 = Adaptation enabled 1 = Freeze adaptation, filter only", "", &RespeakerConfig::FREEZEONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("FREEZEONOFF", "bool", 0, "Adaptive beamformer updates. 0 = Adaptation enabled 1 = Freeze adaptation, filter only", "", &RespeakerConfig::FREEZEONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.AGCONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.AGCONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.AGCONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("AGCONOFF", "bool", 0, "Automatic Gain Control.  0 = OFF  1 = ON", "", &RespeakerConfig::AGCONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<bool>("AGCONOFF", "bool", 0, "Automatic Gain Control.  0 = OFF  1 = ON", "", &RespeakerConfig::AGCONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.MIN_NN = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.MIN_NN = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.MIN_NN = 0.3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("MIN_NN", "double", 0, "Gain-floor for non-stationary noise suppression. [-inf .. 0] dB (default: -10dB = 20log10(0.3))", "", &RespeakerConfig::MIN_NN)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("MIN_NN", "double", 0, "Gain-floor for non-stationary noise suppression. [-inf .. 0] dB (default: -10dB = 20log10(0.3))", "", &RespeakerConfig::MIN_NN)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.MIN_NS = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.MIN_NS = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.MIN_NS = 0.15;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("MIN_NS", "double", 0, "Gain-floor for stationary noise suppression. [-inf .. 0] dB (default: -16dB = 20log10(0.15))", "", &RespeakerConfig::MIN_NS)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("MIN_NS", "double", 0, "Gain-floor for stationary noise suppression. [-inf .. 0] dB (default: -16dB = 20log10(0.15))", "", &RespeakerConfig::MIN_NS)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.GAMMA_NS = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.GAMMA_NS = 3.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.GAMMA_NS = 1.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_NS", "double", 0, "Over-subtraction factor of stationary noise. min .. max attenuation", "", &RespeakerConfig::GAMMA_NS)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_NS", "double", 0, "Over-subtraction factor of stationary noise. min .. max attenuation", "", &RespeakerConfig::GAMMA_NS)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.HPFONOFF = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.HPFONOFF = 3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.HPFONOFF = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<int>("HPFONOFF", "int", 0, "High-pass Filter on microphone signals. 0 = OFF 1 = ON - 70 Hz cut-off 2 = ON - 125 Hz cut-off 3 = ON - 180 Hz cut-off", "", &RespeakerConfig::HPFONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<int>("HPFONOFF", "int", 0, "High-pass Filter on microphone signals. 0 = OFF 1 = ON - 70 Hz cut-off 2 = ON - 125 Hz cut-off 3 = ON - 180 Hz cut-off", "", &RespeakerConfig::HPFONOFF)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.GAMMAVAD_SR = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.GAMMAVAD_SR = 1000.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.GAMMAVAD_SR = 15.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMAVAD_SR", "double", 0, "Set the threshold for voice activity detection. [-inf .. 60] dB (default: 3.5dB 20log10(1.5))", "", &RespeakerConfig::GAMMAVAD_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMAVAD_SR", "double", 0, "Set the threshold for voice activity detection. [-inf .. 60] dB (default: 3.5dB 20log10(1.5))", "", &RespeakerConfig::GAMMAVAD_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.GAMMA_NN = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.GAMMA_NN = 3.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.GAMMA_NN = 1.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_NN", "double", 0, "Over-subtraction factor of non- stationary noise. min .. max attenuation", "", &RespeakerConfig::GAMMA_NN)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_NN", "double", 0, "Over-subtraction factor of non- stationary noise. min .. max attenuation", "", &RespeakerConfig::GAMMA_NN)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.GAMMA_NN_SR = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.GAMMA_NN_SR = 3.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.GAMMA_NN_SR = 1.1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_NN_SR", "double", 0, "Over-subtraction factor of non-stationary noise for ASR.  [0.0 .. 3.0] (default: 1.1)", "", &RespeakerConfig::GAMMA_NN_SR)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(RespeakerConfig::AbstractParamDescriptionConstPtr(new RespeakerConfig::ParamDescription<double>("GAMMA_NN_SR", "double", 0, "Over-subtraction factor of non-stationary noise for ASR.  [0.0 .. 3.0] (default: 1.1)", "", &RespeakerConfig::GAMMA_NN_SR)));
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(RespeakerConfig::AbstractGroupDescriptionConstPtr(new RespeakerConfig::GroupDescription<RespeakerConfig::DEFAULT, RespeakerConfig>(Default)));
//#line 369 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<RespeakerConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<RespeakerConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<RespeakerConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    RespeakerConfig __max__;
    RespeakerConfig __min__;
    RespeakerConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const RespeakerConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static RespeakerConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &RespeakerConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const RespeakerConfig &RespeakerConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const RespeakerConfig &RespeakerConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const RespeakerConfig &RespeakerConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<RespeakerConfig::AbstractParamDescriptionConstPtr> &RespeakerConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<RespeakerConfig::AbstractGroupDescriptionConstPtr> &RespeakerConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const RespeakerConfigStatics *RespeakerConfig::__get_statics__()
  {
    const static RespeakerConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = RespeakerConfigStatics::get_instance();

    return statics;
  }


}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __RESPEAKERRECONFIGURATOR_H__
